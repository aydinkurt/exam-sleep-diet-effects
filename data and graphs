import pandas as pd
import matplotlib.pyplot as plt
import matplotlib.dates as mdates
import numpy as np

# Creating the DataFrame with corrected date parsing
data = {
    "Date": pd.to_datetime(["5/12/2024", "6/12/2024", "7/12/2024", "8/12/2024", "9/12/2024", 
                            "10/12/2024", "11/12/2024", "12/12/2024", "13/12/2024", "14/12/2024", 
                            "15/12/2024", "16/12/2024", "17/12/2024", "18/12/2024", "19/12/2024", 
                            "20/12/2024", "21/12/2024", "22/12/2024", "23/12/2024", "24/12/2024", "25/12/2024"],
                           format='%d/%m/%Y'),
    "Total Sleep (h)": [5, 6, 6.5, 8, 7, 5, 8, 6, 6.5, 3, 5, 7, 8, 7, 6, 8, 7, 9, 6, 8, 8],
    "Total Daily Calories": [2755, 2765, 905, 1800, 1905, 2205, 1000, 1255, 1200, 1805, 
                             1000, 2350, 1350, 1850, 450, 1950, 700, 1300, 1300, 1300, 1800]
}
df = pd.DataFrame(data)

# Adding linear trend lines using numpy's polyfit
z_sleep = np.polyfit(mdates.date2num(df['Date']), df['Total Sleep (h)'], 1)
p_sleep = np.poly1d(z_sleep)

z_calories = np.polyfit(mdates.date2num(df['Date']), df['Total Daily Calories'], 1)
p_calories = np.poly1d(z_calories)

# Plotting Day vs Total Sleep with Trend Line
plt.figure(figsize=(14, 6))
plt.plot(df['Date'], df['Total Sleep (h)'], marker='o', linestyle='-')
plt.plot(df['Date'], p_sleep(mdates.date2num(df['Date'])), linestyle='--', label='Trend Line', color='red')
plt.gca().xaxis.set_major_locator(mdates.DayLocator(interval=1))
plt.gca().xaxis.set_major_formatter(mdates.DateFormatter('%d-%m-%Y'))
plt.xlabel('Date')
plt.ylabel('Total Sleep (hours)')
plt.title('Day vs. Total Sleep with Trend Line')
plt.legend()
plt.grid(True)
plt.xticks(rotation=45)
plt.tight_layout()
plt.show()

# Plotting Day vs Total Calorie Intake with Trend Line
plt.figure(figsize=(14, 6))
plt.bar(df['Date'], df['Total Daily Calories'], color='skyblue')
plt.plot(df['Date'], p_calories(mdates.date2num(df['Date'])), linestyle='--', label='Trend Line', color='red')
plt.gca().xaxis.set_major_locator(mdates.DayLocator(interval=1))
plt.gca().xaxis.set_major_formatter(mdates.DateFormatter('%d-%m-%Y'))
plt.xlabel('Date')
plt.ylabel('Total Daily Calories')
plt.title('Day vs. Total Calorie Intake with Trend Line')
plt.legend()
plt.xticks(rotation=45)
plt.tight_layout()
plt.show()

# Calculating and comparing average sleep during exam and post-exam periods
exam_period_sleep_avg = df[df['Date'] <= '2024-12-15']['Total Sleep (h)'].mean()
post_exam_period_sleep_avg = df[df['Date'] >= '2024-12-16']['Total Sleep (h)'].mean()

# Calculating averages for calories
avg_calories_exam = df[df['Date'] <= '2024-12-15']['Total Daily Calories'].mean()
avg_calories_post_exam = df[df['Date'] >= '2024-12-16']['Total Daily Calories'].mean()

# Plotting Average Total Sleep
fig, ax = plt.subplots()
ax.bar(['Exam Period (5-15 Dec)', 'Post-Exam Period (16-25 Dec)'], [exam_period_sleep_avg, post_exam_period_sleep_avg], color=['red', 'green'])
ax.set_ylabel('Average Total Sleep (hours)')
ax.set_title('Average Total Sleep: Exam vs. Post-Exam Periods')
plt.tight_layout()
plt.show()

# Plotting Average Calories
fig, ax = plt.subplots()
ax.bar(['Exam Period', 'Post-Exam Period'], [avg_calories_exam, avg_calories_post_exam], color=['blue', 'orange'])
ax.set_ylabel('Average Daily Calories')
ax.set_title('Average Daily Calories: Exam vs. Post-Exam Periods')
plt.tight_layout()
plt.show()
